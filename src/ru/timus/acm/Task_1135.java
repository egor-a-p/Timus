package ru.timus.acm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/*
N новобранцев стояли перед сержантом, и он приказал им повернуться налево.
Некоторые солдаты повернулись налево, остальные повернулись направо.
После этого каждый новобранец, увидевший лицо другого новобранца, понял, что совершил ошибку, и повернулся в обратную сторону.
Это случилось одновременно для всех пар солдат, стоящих лицом друг к другу.
Процесс повторялся до тех пор, пока состояние ряда не стабилизировалось.
Напишите программу, которая найдёт, сколько раз развернулись пары солдат, стоящих лицом друг к другу. Если процесс бесконечен, программа должна вывести слово “NO”.
Пример:
Обозначения:
‘<’: новобранец, стоящий лицом влево;
‘>’: новобранец, стоящий лицом вправо.
Строй	Комментарий	Количество поворотов
> > < < > <	Начальный строй	2
> < > < < >	Прошла одна секунда	2
< > < > < >	Прошло две секунды	2
< < > < > >	Прошло три секунды	1
< < < > > >	Окончательный строй	Всего: 7
Исходные данные
Первая строка содержит количество новобранцев N. Остаток ввода содержит только символы ‘<’, ‘>’ и переводы строк.
Во вводе ровно N символов ‘<’ и ‘>’. В каждой строке может быть до 255 символов.
1 ≤ N ≤ 30 000.
Результат
Выведите количество поворотов.
 */

public class Task_1135 {

    public static void main(String[] args) throws IOException {
        BufferedReader consoleReader = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(consoleReader.readLine());
        int close = 0;
        int result = 0;

        int i = 0;
        while (i < n) {
            char c = (char) consoleReader.read();
            if (c == '>') {
                close++;
                i++;
            } else if (c == '<') {
                result += close;
                i++;
            }
        }


        System.out.println(result);
    }
}
